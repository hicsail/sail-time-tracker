query getProjectList {
  projects {
    id
    name
    description
    status
    isBillable
  }
}

query getProjectsWithRecord ($startDate: DateTime!, $endDate: DateTime!) {
  getProjectsWithRecord(startDate: $startDate, endDate: $endDate) {
    id
    name
    isBillable
    workHours
    indirectHours
    percentage
    billableHours
    inner {
      employeeId
      employeeName
      employeeWorkHours
      employeeIndirectHours
      employeePercentage
    }
  }
}

query getProjectById($id: String!) {
  project(id: $id) {
    name
    description
    status
    isBillable
  }
}

mutation ProjectCreateInput($newProject: ProjectCreateInput!) {
  addProject(project: $newProject) {
    id
    name
    description
    status
  }
}

mutation ProjectUpdateInput($updateProject: ProjectUpdateInput!) {
  updateProject(updateProject: $updateProject) {
    id
    name
    description
    status
  }
}

mutation DeleteProjects($ids: [String!]!) {
  deleteProjects(ids: $ids) {
    count
  }
}
